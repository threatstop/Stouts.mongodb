---

- name: install add-apt-repository binary for Ansible to work
  apt: name={{ item }} state=present update_cache=yes
  with_items:
    - python-software-properties
    - apt-transport-https



- name: add MongoDB public GPG key
  apt_key: url=https://docs.mongodb.org/10gen-gpg-key.asc id=7F0CEB10 state=present validate_certs=False

- name: add MongoDB stable repository (for Ubuntu)
  apt_repository: repo='deb http://repo.mongodb.org/apt/{{ ansible_distribution|lower }}  {{ ansible_distribution_release|lower }}/mongodb-org/3.0 multiverse' state=present
  when: ansible_distribution == "Ubuntu"

- name: run the equivalent of "apt-get update" as a separate step
  apt: update_cache=yes


- name: install MongoDB with specific version
  apt: name={{ item }}  update_cache=yes  state=present force=yes
  with_items:
    - "mongodb-org={{ mongodb_package }}*"
    - "mongodb-org-shell={{ mongodb_package }}*"
    - "mongodb-org-tools={{ mongodb_package }}*"
  when: mongodb_package is defined

- name: install MongoDB with default version
  apt: name={{ item }}  update_cache=yes  state=present force=yes
  with_items: [ "mongodb-org" ]
  when: mongodb_package is not defined

- name: Ensure /data directory
  file: path={{mongodb_conf_dbpath}} state=directory owner=mongodb recurse=yes
  
#
# INIT system for mongod
#

- name: set mongod INIT status and start
  service: name=mongod state=started enabled=yes
  when: '"mongod" in mongodb_components'

- name: unset mongod INIT status and stop, if necessary
  service: name=mongod state=stopped enabled=no
  ignore_errors: yes
  when: '"mongod" not in mongodb_components'

# 

- name: Install PyMongo package
  apt: pkg=python-pymongo state=latest
  when: not mongodb_pymongo_from_pip

- name: Install PIP
  apt: pkg={{ item }}
  with_items:
    - python-dev
    - python-pip
  when: mongodb_pymongo_from_pip

- name: Install PyMongo from PIP
  pip: name=pymongo state=latest
  when: mongodb_pymongo_from_pip
